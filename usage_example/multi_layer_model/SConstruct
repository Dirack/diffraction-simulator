#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# SConstruct
# 
# Purpose: Test diffraction Simulator program in multiple interfaces model.
# 
# Site: https://dirack.github.io
# 
# Version 1.0
# 
# Programer: Rodolfo A C Neves (Dirack) 01/04/2020
# 
# Email: rodolfo_profissional@hotmail.com
# 
# License: GPL-3.0 <https://www.gnu.org/licenses/gpl-3.0.txt>.

from rsf.proj import *
from diff import diffmig as diff
import math

def velplot(title,label1='Depth',unit1='kft'):
    return '''
    grey color=j allpos=y title="%s" scalebar=y
    barlabel=Velocity barunit=kft/s
    label1="%s" unit1="%s" label2=Lateral unit2=kft
    barreverse=y pclip=100 
    ''' % (title,label1,unit1)

xmax = 6.0
zmax = 2.0

layers = ((0.30,0.50,0.20,0.30),
          (1.65,1.85,1.55,1.65))

velocities = (1.508,
              1.690,
	      2.0)

def arr2str(array,sep=' '):
    return string.join(map(str,array),sep)

vstr = arr2str(velocities,',')

n1 = len(layers[0])
n2 = len(layers)

Flow('layers.asc',None,
     '''
     echo %s
     n1=%d n2=%d o1=0 d1=%g
     data_format=ascii_float in=$TARGET
     ''' % (string.join(map(arr2str,layers),' '),
            n1,n2,xmax/(n1-1)))
Flow('layers','layers.asc','dd form=native')

d = 0.0101 # non-round for reproducibility

Flow('refs','layers',
     'spline o1=0 d1=%g n1=%d' % (d,int(1.5+xmax/d)))
Flow('dips','refs','deriv scale=y')

Flow('mod1','refs',
     '''
     unif2 d1=%g n1=%d v00=%s
     ''' % (d,int(1.5+zmax/d),vstr))

Result('mod1',
       '''
       grey color=j title="Model 1"
       screenratio=%g screenht=4
       mean=y titlesz=8 labelsz=6
       label1="Depth (km)"
       label2="Distance (km)" scalebar=y
       ''' % (zmax/xmax))

# Kirchoff modeling for multi layer model
Flow('dataCube','refs dips',
	'''
	kirmod_newton nt=1001 dt=0.004 freq=10
	ns=201 ds=0.025 nh=161 dh=0.025 h0=0 s0=0 verb=y cmp=y
	vstatus=0 velocity=%s debug=n fwdxini=y
	xref=0 zref=0 dip=${SOURCES[1]} |
	put d2=0.0125 label3="CMP" unit3="Km" label2="Offset" unit2="Km" label1=Time unit1=s
	''' % (vstr))

v0 = 1.4
dv = 0.1
nv = 20

# Velocity scan
Flow('scan','dataCube',
     '''
     vscan semblance=y
     v0=%g dv=%g nv=%d
     ''' % (v0,dv,nv))

# Velocity picking
Flow('pick','scan',
     '''
     pick rect1=50 rect2=100 vel0=1.4 | window
     ''')
Result('pick',velplot('Stacking Velocity','Time','s'))

# NMO and stack
Flow('nmo','dataCube pick',
     'nmo velocity=${SOURCES[1]}')

Flow('stack','nmo','stack')

Result('stack','grey title="NMO Stack" ')

# Pick t0's and m0's to be the diffraction hyperbola center
t0s=(0.6,0.65,0.7,0.65,0.6,0.5,0.36,0.26,2.1,2.15,2.12,2.15,2.1,2,1.86,1.76)
m0s=(1,1.5,1.75,2,2.5,3,3.5,4,1,1.5,1.75,2,2.5,3,3.5,4)
v=(1.508,1.508,1.508,1.508,1.508,1.508,1.508,1.508,1.6,1.6,1.6,1.6,1.6,1.6,1.6,1.6)

Flow('t0s.asc',None,
     '''
     echo %s
     n1=%d o1=0 d1=1
     data_format=ascii_float in=$TARGET
     ''' % (arr2str(t0s),len(t0s)))
Flow('t0s','t0s.asc','dd form=native')

Flow('m0s.asc',None,
     '''
     echo %s
     n1=%d o1=0 d1=1
     data_format=ascii_float in=$TARGET
     ''' % (arr2str(m0s),len(m0s)))
Flow('m0s','m0s.asc','dd form=native')

Flow('v.asc',None,
     '''
     echo %s
     n1=%d o1=0 d1=1
     data_format=ascii_float in=$TARGET
     ''' % (arr2str(v),len(v)))
Flow('v','v.asc','dd form=native')

Flow(["reflectionDiffraction","diffractionSimulatedSection"],['stack','t0s','m0s','v'],
	'''
	diffsim diff=${TARGETS[1]} verb=y freq=10 aperture=0.5 t0=${SOURCES[1]} m0=${SOURCES[2]} v=${SOURCES[3]}
	''')

Result('reflectionDiffraction','grey title="Diffraction simulated section" ')

Result('diffractionSimulatedSection','grey title="Diffraction simulated section" ')

## Migration recipe of the simulated diffractions
diff("diff",
	"diffractionSimulatedSection",
	v0=1.4,
	nv=200,
	dv=0.01,
	nx=201, # Number of CMP's
	padx=1000,
	nt=1001, # Sampling in time (n1)
	tmin=0,
	tmax=4,
            rect1=10,
            rect2=10,
            srect1=1,
            srect2=3,
            vslope=None,
            units='Km',
            f1=1,
            j3=1,
            dx=1,
            x0=0,
            beg1=0,
            frect1=0,
            frect2=0,
            an=1,
            nout=2048,
            vx0=None)


End()
